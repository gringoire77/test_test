.. raw:: latex

   \newpage

Задания
=======

.. include:: ./exercises_intro.rst

Задание 5.1
~~~~~~~~~~~

В задании создан словарь, с информацией о разных устройствах.

Необходимо запросить у пользователя ввод имени устройства (r1, r2 или sw1).
И вывести информацию о соответствующем устройстве на стандартный поток вывода
(информация будет в виде словаря).


Пример выполнения скрипта:

::

    $ python task_5_1.py
    Введите имя устройства: r1
    {'location': '21 New Globe Walk', 'vendor': 'Cisco', 'model': '4451', 'ios': '15.4', 'ip': '10.255.0.1'}

Ограничение: нельзя изменять словарь london_co.

Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if.


.. code:: python

    london_co = {
        'r1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.1'
        },
        'r2': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.2'
        },
        'sw1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '3850',
            'ios': '3.6.XE',
            'ip': '10.255.0.101',
            'vlans': '10,20,30',
            'routing': True
        }
    }


Задание 5.1a
~~~~~~~~~~~~

Переделать скрипт из задания 5.1 таким образом, чтобы,
кроме имени устройства, запрашивался также параметр устройства, который нужно отобразить.

Вывести информацию о соответствующем параметре, указанного устройства.

Пример выполнения скрипта:

::

    $ python task_5_1a.py
    Введите имя устройства: r1
    Введите имя параметра: ios
    15.4

Ограничение: нельзя изменять словарь london_co.

Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if.

.. code:: python

    london_co = {
        'r1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.1'
        },
        'r2': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.2'
        },
        'sw1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '3850',
            'ios': '3.6.XE',
            'ip': '10.255.0.101',
            'vlans': '10,20,30',
            'routing': True
        }
    }

Задание 5.1b
~~~~~~~~~~~~

Переделать скрипт из задания 5.1a таким образом, чтобы, при запросе параметра,
отображался список возможных параметров. Список параметров надо получить из словаря,
а не прописывать вручную.

Вывести информацию о соответствующем параметре, указанного устройства.

Пример выполнения скрипта:

::

    $ python task_5_1b.py
    Введите имя устройства: r1
    Введите имя параметра (ios, model, vendor, location, ip): ip
    10.255.0.1

Ограничение: нельзя изменять словарь london_co.

Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if.

.. code:: python

    london_co = {
        'r1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.1'
        },
        'r2': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.2'
        },
        'sw1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '3850',
            'ios': '3.6.XE',
            'ip': '10.255.0.101',
            'vlans': '10,20,30',
            'routing': True
        }
    }

Задание 5.1c
~~~~~~~~~~~~

Переделать скрипт из задания 5.1b таким образом, чтобы, при запросе параметра,
которого нет в словаре устройства, отображалось сообщение 'Такого параметра нет'.

.. note::
    Попробуйте набрать неправильное имя параметра или несуществующий параметр,
    чтобы увидеть какой будет результат. А затем выполняйте задание.

Если выбран существующий параметр,
вывести информацию о соответствующем параметре, указанного устройства.

Пример выполнения скрипта:

::

    $ python task_5_1c.py
    Введите имя устройства: r1
    Введите имя параметра (ios, model, vendor, location, ip): ips
    Такого параметра нет

Ограничение: нельзя изменять словарь london_co.

Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if.

.. code:: python

    london_co = {
        'r1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.1'
        },
        'r2': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.2'
        },
        'sw1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '3850',
            'ios': '3.6.XE',
            'ip': '10.255.0.101',
            'vlans': '10,20,30',
            'routing': True
        }
    }

Задание 5.1d
~~~~~~~~~~~~

Переделать скрипт из задания 5.1c таким образом, чтобы, при запросе параметра,
пользователь мог вводить название параметра в любом регистре.

Пример выполнения скрипта:

::

    $ python task_5_1d.py
    Введите имя устройства: r1
    Введите имя параметра (ios, model, vendor, location, ip): IOS
    15.4


Ограничение: нельзя изменять словарь london_co.

Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if.

.. code:: python

    london_co = {
        'r1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.1'
        },
        'r2': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '4451',
            'ios': '15.4',
            'ip': '10.255.0.2'
        },
        'sw1': {
            'location': '21 New Globe Walk',
            'vendor': 'Cisco',
            'model': '3850',
            'ios': '3.6.XE',
            'ip': '10.255.0.101',
            'vlans': '10,20,30',
            'routing': True
        }
    }

Задание 5.2
~~~~~~~~~~~

Запросить у пользователя ввод IP-сети в формате: ``10.1.1.0/24``

Затем вывести информацию о сети и маске в таком формате:

::

    Network:
    10        1         1         0
    00001010  00000001  00000001  00000000

    Mask:
    /24
    255       255       255       0
    11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 5.2a
~~~~~~~~~~~~

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):

* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:

* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.1/30 - хост из сети 10.0.5.0/30

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

::

    Network:
    10        0         1         0
    00001010  00000000  00000001  00000000

    Mask:
    /24
    255       255       255       0
    11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 5.2b
~~~~~~~~~~~~

Преобразовать скрипт из задания 5.2a таким образом,
чтобы сеть/маска не запрашивались у пользователя,
а передавались как аргумент скрипту.

Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 5.3
~~~~~~~~~~~~

Скрипт должен запрашивать у пользователя:

* информацию о режиме интерфейса (access/trunk)
* номере интерфейса (тип и номер, вида Gi0/3)
* номер VLANа (для режима trunk будет вводиться список VLANов)

В зависимости от выбранного режима, на стандартный поток вывода,
должна возвращаться соответствующая конфигурация access или trunk
(шаблоны команд находятся в списках access_template и trunk_template).

При этом, сначала должна идти строка interface и подставлен номер интерфейса,
а затем соответствующий шаблон, в который подставлен номер VLANа (или список VLANов).

Ограничение: Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if и циклов for/while.

Ниже примеры выполнения скрипта, чтобы было проще понять задачу.

Пример выполнения скрипта, при выборе режима access:

::

    $ python task_5_3.py
    Введите режим работы интерфейса (access/trunk): access
    Введите тип и номер интерфейса: Fa0/6
    Введите номер влан(ов): 3

    interface Fa0/6
    switchport mode access
    switchport access vlan 3
    switchport nonegotiate
    spanning-tree portfast
    spanning-tree bpduguard enable

Пример выполнения скрипта, при выборе режима trunk:

::

    $ python task_5_3.py
    Введите режим работы интерфейса (access/trunk): trunk
    Введите тип и номер интерфейса: Fa0/7
    Введите номер влан(ов): 2,3,4,5

    interface Fa0/7
    switchport trunk encapsulation dot1q
    switchport mode trunk
    switchport trunk allowed vlan 2,3,4,5

.. code:: python

    access_template = [
        'switchport mode access', 'switchport access vlan {}',
        'switchport nonegotiate', 'spanning-tree portfast',
        'spanning-tree bpduguard enable'
    ]

    trunk_template = [
        'switchport trunk encapsulation dot1q', 'switchport mode trunk',
        'switchport trunk allowed vlan {}'
    ]

Задание 5.3a
~~~~~~~~~~~~


Дополнить скрипт из задания 5.3 таким образом, чтобы, в зависимости от выбранного режима,
задавались разные вопросы в запросе о номере VLANа или списка VLANов:

* для access: 'Введите номер VLAN:'
* для trunk: 'Введите разрешенные VLANы:'

Ограничение: Все задания надо выполнять используя только пройденные темы.
То есть эту задачу можно решить без использования условия if и циклов for/while.

.. code:: python

    access_template = [
        'switchport mode access', 'switchport access vlan {}',
        'switchport nonegotiate', 'spanning-tree portfast',
        'spanning-tree bpduguard enable'
    ]

    trunk_template = [
        'switchport trunk encapsulation dot1q', 'switchport mode trunk',
        'switchport trunk allowed vlan {}'
    ]
