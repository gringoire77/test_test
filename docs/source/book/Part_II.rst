II. Повторное использование кода
################################

При написании кода достаточно часто часть действий повторяется. Это
может быть небольшой блок на 3-5 строк, а может быть и достаточно
большая последовательность действий.

Копировать код — плохая затея. Так как, если потом понадобится обновить
одну из копий, надо будет обновлять и другие.

Вместо этого, надо создать специальный блок кода с именем - функцию. И
каждый раз, когда код надо повторить, достаточно вызвать функцию.
Функция позволяет не только назвать какой-то блок кода, но и сделать его
более абстрактным за счет параметров. Параметры дают возможность
передавать разные исходные данные для выполнения функции. И,
соответственно, получать разный результат, в зависимости от входящих
параметров.

Созданию функций посвящён раздел :ref:`functions_index`.
Кроме того, в разделе :ref:`useful_functions_index`
рассматриваются полезные встроенные функции.

После разделения кода на функции, достаточно быстро наступает момент,
когда необходимо использовать функцию в другом скрипте. Конечно же,
копирование функции так же неудобно, как и копирование обычного кода.
Для повторного использования кода из другого скрипта Python используются
модули.

Одиннадцатый
раздел :ref:`modules_index`
посвящён созданию собственных модулей, а в разделе :ref:`useful_modules_index`
рассматриваются полезные модули из стандартной библиотеки Python.

Последний
раздел :ref:`iterator_generator_index`
этой части посвящён итерируемым объектам, итераторам и генераторам.


.. toctree::
   :maxdepth: 1

   09_functions/index.rst
   10_useful_functions/index.rst
   11_modules/index.rst
   12_useful_modules/index.rst
   13_iterator_generator/index.rst
