.. raw:: latex

   \newpage

Задания
=======

.. include:: ./exercises_intro.rst

Задание 7.1
~~~~~~~~~~~

Аналогично заданию 4.6 обработать строки из файла ospf.txt
и вывести информацию по каждой в таком виде:

::

    Protocol:              OSPF
    Prefix:                10.0.24.0/24
    AD/Metric:             110/41
    Next-Hop:              10.0.13.3
    Last update:           3d18h
    Outbound Interface:    FastEthernet0/0

Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 7.2
~~~~~~~~~~~

Создать скрипт, который будет обрабатывать конфигурационный файл config_sw1.txt:
 имя файла передается как аргумент скрипту.

Скрипт должен возвращать на стандартный поток вывода команды из переданного
конфигурационного файла, исключая строки, которые начинаются с ``!``.

Между строками не должно быть дополнительного символа перевода строки.

Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 7.2a
~~~~~~~~~~~~

Сделать копию скрипта задания 7.2.

Дополнить скрипт: Скрипт не должен выводить команды, в которых содержатся слова, которые указаны в списке ignore.

Ограничение: Все задания надо выполнять используя только пройденные темы.

.. code:: python

    ignore = ['duplex', 'alias', 'Current configuration']

Задание 7.2b
~~~~~~~~~~~~

Дополнить скрипт из задания 7.2a: вместо вывода на стандартный поток вывода, скрипт должен записать полученные строки в файл config_sw1_cleared.txt

При этом, должны быть отфильтрованы строки, которые содержатся в списке ignore.
Строки, которые начинаются на ``!`` отфильтровывать не нужно.

Ограничение: Все задания надо выполнять используя только пройденные темы.

.. code:: python

    ignore = ['duplex', 'alias', 'Current configuration']

Задание 7.2c
~~~~~~~~~~~~

Переделать скрипт из задания 7.2b: передавать как аргументы скрипту:

* имя исходного файла конфигурации
* имя итогового файла конфигурации

Внутри, скрипт должен отфильтровать те строки, в исходном файле конфигурации,
в которых содержатся слова из списка ignore.
И записать остальные строки в итоговый файл.

Проверить работу скрипта на примере файла config_sw1.txt.

Ограничение: Все задания надо выполнять используя только пройденные темы.

.. code:: python

    ignore = ['duplex', 'alias', 'Current configuration']

Задание 7.3
~~~~~~~~~~~

Скрипт должен обрабатывать записи в файле CAM_table.txt.
Каждая строка, где есть MAC-адрес, должна быть обработана таким образом,
чтобы на стандартный поток вывода была выведена таблица вида (показаны не все строки из файла):

::

    100    01bb.c580.7000   Gi0/1
    200    0a4b.c380.7000   Gi0/2
    300    a2ab.c5a0.7000   Gi0/3
    100    0a1b.1c80.7000   Gi0/4
    500    02b1.3c80.7000   Gi0/5
    200    1a4b.c580.7000   Gi0/6
    300    0a1b.5c80.7000   Gi0/7

Ограничение: Все задания надо выполнять используя только пройденные темы.


Задание 7.3a
~~~~~~~~~~~~

Сделать копию скрипта задания 7.3.

Дополнить скрипт: Отсортировать вывод по номеру VLAN.

В результате должен получиться такой вывод:

::

    10       01ab.c5d0.70d0      Gi0/8
    10       0a1b.1c80.7000      Gi0/4
    100      01bb.c580.7000      Gi0/1
    200      0a4b.c380.7c00      Gi0/2
    200      1a4b.c580.7000      Gi0/6
    300      0a1b.5c80.70f0      Gi0/7
    300      a2ab.c5a0.700e      Gi0/3
    500      02b1.3c80.7b00      Gi0/5
    1000     0a4b.c380.7d00      Gi0/9


Ограничение: Все задания надо выполнять используя только пройденные темы.


Задание 7.3b
~~~~~~~~~~~~

Сделать копию скрипта задания 7.3a.

Дополнить скрипт:

* Запросить у пользователя ввод номера VLAN.
* Выводить информацию только по указанному VLAN.

Ограничение: Все задания надо выполнять используя только пройденные темы.

