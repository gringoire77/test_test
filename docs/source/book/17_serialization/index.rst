.. raw:: latex

   \newpage

.. _serialization_index:

17. Работа с файлами в формате CSV, JSON, YAML
============================

Сериализация данных - это сохранение данных в каком-то формате, чаще
всего, структурированном.

Например, это могут быть: 

* файлы в формате YAML или JSON 
* файлы в формате CSV 
* база данных

Кроме того, Python позволяет записывать объекты самого языка (этот
аспект в курсе не рассматривается, но, если вам интересно, посмотрите на
модуль Pickle).

В этом разделе рассматриваются форматы CSV, JSON, YAML, а в следующем
разделе - базы данных.

Для чего могут пригодится форматы YAML, JSON, CSV: 

* у вас могут быть данные об IP-адресах и подобной информации, 
  которую нужно обработать, в таблицах 

  * таблицу можно экспортировать в формат CSV и обрабатывать её с помощью Python 

* управляющий софт может возвращать данные в JSON. Соответственно, 
  преобразовав эти данные в объект Python, с ними можно работать и делать что угодно 
* YAML очень удобно использовать для описания параметров, 
  так как у него довольно приятный синтаксис 

  * например, это могут быть параметры настройки различных объектов (IP-адреса, VLAN и др.) 
  * как минимум, знание формата YAML пригодится при использовании Ansible

Для каждого из этих форматов в Python есть модуль, который существенно
упрощает работу с ними.

.. toctree::
   :maxdepth: 1

   1_csv
   2_json
   3_yaml
   further_reading
   ../../exercises/17_exercises
